{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\react\\\\React-Hooks-master\\\\src\\\\lezioni\\\\3-render-condizionale\\\\risultato\\\\1-render-multiplo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst url = \"https://api.github.com/users/QuincyLarson\";\n\nconst ConditionalCompining = () => {\n  _s();\n\n  /**\n   * @type {[Boolean, Function]} Loading State\n   */\n  const [isLoading, setIsLoading] = useState(true);\n  /**\n   * @type {[Boolean, Function]} Error State\n   */\n\n  const [isError, setIsError] = useState(false);\n  /**\n   * @type {[Object, Function]} user Selezionato\n   */\n\n  const [user, setUser] = useState();\n  /**\n   * Fetcha Dati e modifica lo state user\n   *\n   * @async\n   * @function getData\n   * @returns {undefined}\n   */\n\n  const getData = async () => {\n    setIsError(false);\n    setIsLoading(true);\n\n    try {\n      const response = await axios.get(url);\n      setUser(response.data);\n    } catch (error) {\n      console.log(error);\n      setIsError(true);\n    }\n\n    setIsLoading(false);\n  };\n  /**\n   * Al Primo Render del componente lancia la funzione getData\n   */\n\n\n  useEffect(() => {\n    getData();\n  }, []); //Se Lo State di isLoading è true ritorna il caricamento\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  } //Se si verifica un errore Ritorna Error Component\n\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(ErrorComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  } //Se nessuna delle condizioni precednete è soddisfatta tutto è andato a buon fine\n\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"card d-flex align-items-center p-5 shadow mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: user.avatar_url,\n      alt: user.name,\n      style: {\n        width: \"80px\",\n        height: \"80px\"\n      },\n      className: \"rounded-circle my-4 shadow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: user.login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConditionalCompining, \"jMVYaQAF/sAvuZmyQGcrP7XQ71c=\");\n\n_c = ConditionalCompining;\n\nconst Loading = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Loading;\n\nconst ErrorComponent = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Sorry, there is an Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = ErrorComponent;\nexport default ConditionalCompining;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ConditionalCompining\");\n$RefreshReg$(_c2, \"Loading\");\n$RefreshReg$(_c3, \"ErrorComponent\");","map":{"version":3,"sources":["C:/Users/UTENTE/Desktop/react/React-Hooks-master/src/lezioni/3-render-condizionale/risultato/1-render-multiplo.js"],"names":["React","useEffect","useState","axios","url","ConditionalCompining","isLoading","setIsLoading","isError","setIsError","user","setUser","getData","response","get","data","error","console","log","avatar_url","name","width","height","login","Loading","ErrorComponent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,2CAAZ;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AACjC;AACF;AACA;AACE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA;AACF;AACA;;AACE,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA;AACF;AACA;;AACE,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,QAAMU,OAAO,GAAG,YAAY;AAC1BH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUV,GAAV,CAAvB;AACAO,MAAAA,OAAO,CAACE,QAAQ,CAACE,IAAV,CAAP;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAXD;AAaA;AACF;AACA;;;AACEN,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT,CArCiC,CAyCjC;;AACA,MAAIN,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GA5CgC,CA8CjC;;;AACA,MAAIE,OAAJ,EAAa;AACX,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAjDgC,CAmDjC;;;AACA,sBACE;AAAS,IAAA,SAAS,EAAC,gDAAnB;AAAA,4BACE;AACE,MAAA,GAAG,EAAEE,IAAI,CAACS,UADZ;AAEE,MAAA,GAAG,EAAET,IAAI,CAACU,IAFZ;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAHT;AAIE,MAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,gBAAKZ,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/DD;;GAAMlB,oB;;KAAAA,oB;;AAiEN,MAAMmB,OAAO,GAAG,MAAM;AACpB,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMA,O;;AAQN,MAAMC,cAAc,GAAG,MAAM;AAC3B,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMA,c;AAQN,eAAepB,oBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst url = \"https://api.github.com/users/QuincyLarson\";\n\nconst ConditionalCompining = () => {\n  /**\n   * @type {[Boolean, Function]} Loading State\n   */\n  const [isLoading, setIsLoading] = useState(true);\n  /**\n   * @type {[Boolean, Function]} Error State\n   */\n  const [isError, setIsError] = useState(false);\n  /**\n   * @type {[Object, Function]} user Selezionato\n   */\n  const [user, setUser] = useState();\n\n  /**\n   * Fetcha Dati e modifica lo state user\n   *\n   * @async\n   * @function getData\n   * @returns {undefined}\n   */\n  const getData = async () => {\n    setIsError(false);\n    setIsLoading(true);\n    try {\n      const response = await axios.get(url);\n      setUser(response.data);\n    } catch (error) {\n      console.log(error);\n      setIsError(true);\n    }\n    setIsLoading(false);\n  };\n\n  /**\n   * Al Primo Render del componente lancia la funzione getData\n   */\n  useEffect(() => {\n    getData();\n  }, []);\n\n  //Se Lo State di isLoading è true ritorna il caricamento\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  //Se si verifica un errore Ritorna Error Component\n  if (isError) {\n    return <ErrorComponent />;\n  }\n\n  //Se nessuna delle condizioni precednete è soddisfatta tutto è andato a buon fine\n  return (\n    <article className=\"card d-flex align-items-center p-5 shadow mt-5\">\n      <img\n        src={user.avatar_url}\n        alt={user.name}\n        style={{ width: \"80px\", height: \"80px\" }}\n        className=\"rounded-circle my-4 shadow\"\n      ></img>\n      <h3>{user.login}</h3>\n    </article>\n  );\n};\n\nconst Loading = () => {\n  return (\n    <div>\n      <h2>Loading....</h2>\n    </div>\n  );\n};\n\nconst ErrorComponent = () => {\n  return (\n    <div>\n      <h2> Sorry, there is an Error</h2>\n    </div>\n  );\n};\n\nexport default ConditionalCompining;\n"]},"metadata":{},"sourceType":"module"}