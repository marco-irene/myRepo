{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\React-Hooks-master\\\\src\\\\lezioni\\\\1-useState\\\\risultato\\\\5-useState-contatore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst CounterComponent = () => {\n  _s();\n\n  /**\n   * @type {[Number, Funtion]} contatore\n   */\n  const [contatore, setContatore] = useState(0);\n  /**\n   * Funzione per azzerrare il contatore\n   * @return {undefined}\n   */\n\n  const reset = () => {\n    setContatore(0);\n  };\n  /**\n   * Funzione per diminuire il valore del contatore\n   * @return {undefined}\n   */\n\n\n  const dimContatore = () => {\n    setContatore(contatore - 1);\n  };\n  /**\n   * Funzione per aumentare il contatore dopo 2000 millisecondi\n   * Usare VALUE RETURN se il valore che vado a modificare non dipende\n   * da quello precedente.\n   * Mentre se l'aggiornamento di stato dipendesse dal valore di state attuale\n   * usare FUNCTIONAL RETURN\n   * @return {undefined}\n   */\n\n\n  const aumentaContatoreTemporale = () => {\n    setTimeout(function () {\n      setContatore(oldValue => {\n        return oldValue + 1;\n      });\n    }, 2000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow rounded p-5 w-75 col-6 offset-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: contatore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button my-2\",\n        onClick: dimContatore,\n        children: [\" \", \"Diminuisci\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button my-2\",\n        onClick: aumentaContatoreTemporale,\n        children: [\" \", \"Aumenta\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button reset-button\",\n      onClick: reset,\n      children: \"Resetta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CounterComponent, \"3kBnwb1/QuVgruZx3mrBsKDS1/g=\");\n\n_c = CounterComponent;\nexport default CounterComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterComponent\");","map":{"version":3,"sources":["C:/Users/UTENTE/Desktop/React-Hooks-master/src/lezioni/1-useState/risultato/5-useState-contatore.js"],"names":["React","useState","CounterComponent","contatore","setContatore","reset","dimContatore","aumentaContatoreTemporale","setTimeout","oldValue"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B;AACF;AACA;AACE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,CAAD,CAA1C;AAEA;AACF;AACA;AACA;;AACE,QAAMI,KAAK,GAAG,MAAM;AAClBD,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACD,GAFD;AAIA;AACF;AACA;AACA;;;AACE,QAAME,YAAY,GAAG,MAAM;AACzBF,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACD,GAFD;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,QAAMI,yBAAyB,GAAG,MAAM;AACtCC,IAAAA,UAAU,CAAC,YAAY;AACrBJ,MAAAA,YAAY,CAAEK,QAAD,IAAc;AACzB,eAAOA,QAAQ,GAAG,CAAlB;AACD,OAFW,CAAZ;AAGD,KAJS,EAIP,IAJO,CAAV;AAKD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA,4BACE;AAAA,gBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEG,YAAzC;AAAA,mBACG,GADH,gBAEa,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEC,yBAAzC;AAAA,mBACG,GADH,aAEU,GAFV;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAYE;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,OAAO,EAAEF,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAvDD;;GAAMH,gB;;KAAAA,gB;AAyDN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst CounterComponent = () => {\n  /**\n   * @type {[Number, Funtion]} contatore\n   */\n  const [contatore, setContatore] = useState(0);\n\n  /**\n   * Funzione per azzerrare il contatore\n   * @return {undefined}\n   */\n  const reset = () => {\n    setContatore(0);\n  };\n\n  /**\n   * Funzione per diminuire il valore del contatore\n   * @return {undefined}\n   */\n  const dimContatore = () => {\n    setContatore(contatore - 1);\n  };\n\n  /**\n   * Funzione per aumentare il contatore dopo 2000 millisecondi\n   * Usare VALUE RETURN se il valore che vado a modificare non dipende\n   * da quello precedente.\n   * Mentre se l'aggiornamento di stato dipendesse dal valore di state attuale\n   * usare FUNCTIONAL RETURN\n   * @return {undefined}\n   */\n  const aumentaContatoreTemporale = () => {\n    setTimeout(function () {\n      setContatore((oldValue) => {\n        return oldValue + 1;\n      });\n    }, 2000);\n  };\n  return (\n    <div className=\"bg-white shadow rounded p-5 w-75 col-6 offset-3\">\n      <h3>{contatore}</h3>\n      <div className=\"d-flex justify-content-between\">\n        <button className=\"button my-2\" onClick={dimContatore}>\n          {\" \"}\n          Diminuisci{\" \"}\n        </button>\n        <button className=\"button my-2\" onClick={aumentaContatoreTemporale}>\n          {\" \"}\n          Aumenta{\" \"}\n        </button>\n      </div>\n      <button className=\"button reset-button\" onClick={reset}>\n        Resetta\n      </button>\n    </div>\n  );\n};\n\nexport default CounterComponent;\n"]},"metadata":{},"sourceType":"module"}