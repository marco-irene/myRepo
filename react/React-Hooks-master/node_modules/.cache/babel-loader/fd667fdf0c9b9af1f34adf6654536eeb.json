{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\myRepo\\\\react\\\\React-Hooks-master\\\\src\\\\lezioni\\\\4-forms\\\\risultato\\\\1-input-controllati.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\n\nconst ControlledInput = () => {\n  _s();\n\n  /**\n   * @type {[String, Function]} Nome\n   */\n  const [nome, setNome] = useState(\"\");\n  /**\n   * @type {[String, Function]} Email\n   */\n\n  const [email, setEmail] = useState(\"\");\n  /**\n   * @type {[String, Function]} Cellulare\n   */\n\n  const [cellulare, setCellulare] = useState(\"\");\n  /**\n   * @type {[Array, Function]} Persone\n   */\n\n  const [persone, setPersone] = useState([]);\n  /**\n   * Gestisce il submit del form\n   * @param {document#event:submit} e\n   * @listens document#submit\n   */\n\n  const handleSumbit = e => {\n    e.preventDefault();\n\n    if (nome && email && cellulare) {\n      setPersone([...persone, {\n        id: new Date(Date.now()).getTime().toString(),\n        // per id unico o usare librerie tipo uid\n        nome,\n        email,\n        cellulare\n      }]);\n      setNome(\"\");\n      setEmail(\"\");\n      setCellulare(\"\");\n    } else {\n      alert(\"riempi il form\");\n    }\n  };\n  /**\n   * Gestisce il submit del form\n   * @param {document#event:change} e\n   * @listens document#change\n   */\n\n\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n  }; //Mostra in console le persone che vengono aggiunte\n\n\n  useEffect(() => {\n    const {\n      log\n    } = console;\n    log(persone);\n  }, [persone]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"bg-white shadow rounded p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group d-flex align-items-center justify-content-around container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nome\",\n        className: \"text-left font-weight-bold col-3\",\n        children: \"Nome:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"nome\",\n        type: \"text\",\n        name: \"nome\",\n        value: nome //per riferimento agli usestate\n        ,\n        onChange: e => setNome(e.target.value) //.target restituisce l'elemento che onFocus in qst caso value\n        ,\n        className: \"form-control col-9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group d-flex align-items-center justify-content-around container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: \"text-left font-weight-bold col-3\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"form-control col-9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group d-flex align-items-center justify-content-around container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cellulare\",\n        className: \"text-left font-weight-bold col-3\",\n        children: \"Cellulare:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"cellulare\",\n        type: \"tel\",\n        name: \"cellulare\",\n        value: cellulare,\n        onChange: handleChange,\n        className: \"form-control col-9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-info\",\n      onClick: handleSumbit,\n      children: \"Invia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ControlledInput, \"IKMveAWZ+2pBurQzQd0dC2ep1dc=\");\n\n_c = ControlledInput;\nexport default ControlledInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledInput\");","map":{"version":3,"sources":["C:/Users/UTENTE/Desktop/myRepo/react/React-Hooks-master/src/lezioni/4-forms/risultato/1-input-controllati.js"],"names":["React","useEffect","useState","ControlledInput","nome","setNome","email","setEmail","cellulare","setCellulare","persone","setPersone","handleSumbit","e","preventDefault","id","Date","now","getTime","toString","alert","handleChange","value","target","log","console"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst ControlledInput = () => {\n  /**\n   * @type {[String, Function]} Nome\n   */\n  const [nome, setNome] = useState(\"\");\n\n  /**\n   * @type {[String, Function]} Email\n   */\n  const [email, setEmail] = useState(\"\");\n\n  /**\n   * @type {[String, Function]} Cellulare\n   */\n  const [cellulare, setCellulare] = useState(\"\");\n\n  /**\n   * @type {[Array, Function]} Persone\n   */\n  const [persone, setPersone] = useState([]);\n\n  /**\n   * Gestisce il submit del form\n   * @param {document#event:submit} e\n   * @listens document#submit\n   */\n  const handleSumbit = (e) => {\n    e.preventDefault();\n    if (nome && email && cellulare) {\n      setPersone([\n        ...persone,\n        {\n          id: new Date(Date.now()).getTime().toString(), // per id unico o usare librerie tipo uid\n          nome,\n          email,\n          cellulare,\n        },\n      ]);\n      setNome(\"\");\n      setEmail(\"\");\n      setCellulare(\"\");\n    } else {\n      alert(\"riempi il form\");\n    }\n  };\n\n  /**\n   * Gestisce il submit del form\n   * @param {document#event:change} e\n   * @listens document#change\n   */\n  const handleChange = (e) => {\n    const { value } = e.target;\n   \n  };\n\n  //Mostra in console le persone che vengono aggiunte\n  useEffect(() => {\n    const { log } = console;\n    log(persone);\n  }, [persone]);\n  return (\n    <form className=\"bg-white shadow rounded p-4\">\n      <div className=\"form-group d-flex align-items-center justify-content-around container\">\n        <label htmlFor=\"nome\" className=\"text-left font-weight-bold col-3\">\n          Nome:\n        </label>\n        <input\n          id=\"nome\"\n          type=\"text\"\n          name=\"nome\"\n          value={nome} //per riferimento agli usestate\n          onChange={(e) => setNome(e.target.value)} //.target restituisce l'elemento che onFocus in qst caso value\n          className=\"form-control col-9\"\n        ></input>\n      </div>\n      <div className=\"form-group d-flex align-items-center justify-content-around container\">\n        <label htmlFor=\"email\" className=\"text-left font-weight-bold col-3\">\n          Email:\n        </label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          className=\"form-control col-9\"\n        ></input>\n      </div>\n      <div className=\"form-group d-flex align-items-center justify-content-around container\">\n        <label htmlFor=\"cellulare\" className=\"text-left font-weight-bold col-3\">\n          Cellulare:\n        </label>\n        <input\n          id=\"cellulare\"\n          type=\"tel\"\n          name=\"cellulare\"\n          value={cellulare}\n          onChange={handleChange}\n          className=\"form-control col-9\"\n        ></input>\n      </div>\n      <button type=\"submit\" className=\"btn btn-info\" onClick={handleSumbit}>\n        Invia\n      </button>\n    </form>\n  );\n};\n\nexport default ControlledInput;\n"]},"metadata":{},"sourceType":"module"}