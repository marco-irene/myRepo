{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\react\\\\React-Hooks-master\\\\src\\\\lezioni\\\\2-useEffect\\\\risultato\\\\1-useEffect-basi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; //useEffect viene lanciato dopo ogni re-render\n//Lo use Effect ci permette di chiamare una clean up Function\n//l secondo parametro descrive all'aggiornare di quali valori viene eseguito lo useEffect\n\nconst useEffectBasi = () => {\n  _s();\n\n  /**\n   * @type {[Number, Funtion]} valore del contatore\n   */\n  const [value, setValue] = useState(1);\n  /**\n   * Funzione aumentare il contatore\n   * @return {undefined}\n   */\n\n  const aumenta = () => {\n    setValue(oldValue => oldValue + 1);\n  };\n  /**\n   * useEffect modifica il titolo della nostra applicazione\n   * in base al numero di contenuto all'interno del nostro state value\n   */\n\n\n  useEffect(() => {\n    console.log(\"Eccomi, sono use Effect\");\n\n    if (value < 1) {\n      document.title = `Nessun Messaggio`;\n    } else {\n      document.title = `Nuovo Messaggi: ${value}`;\n    }\n\n    return () => console.log(\"clean up function chiamata\");\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Value: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: aumenta,\n      children: \"Aumenta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(useEffectBasi, \"O4P1xnMTi7pTAFiz4aVvPdKWn7Q=\");\n\nexport default useEffectBasi;","map":{"version":3,"sources":["C:/Users/UTENTE/Desktop/react/React-Hooks-master/src/lezioni/2-useEffect/risultato/1-useEffect-basi.js"],"names":["React","useEffect","useState","useEffectBasi","value","setValue","aumenta","oldValue","console","log","document","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;AACA;;AACA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B;AACF;AACA;AACE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;AAEA;AACF;AACA;AACA;;AACE,QAAMI,OAAO,GAAG,MAAM;AACpBD,IAAAA,QAAQ,CAAEE,QAAD,IAAcA,QAAQ,GAAG,CAA1B,CAAR;AACD,GAFD;AAIA;AACF;AACA;AACA;;;AACEN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AACA,QAAIL,KAAK,GAAG,CAAZ,EAAe;AACbM,MAAAA,QAAQ,CAACC,KAAT,GAAkB,kBAAlB;AACD,KAFD,MAEO;AACLD,MAAAA,QAAQ,CAACC,KAAT,GAAkB,mBAAkBP,KAAM,EAA1C;AACD;;AACD,WAAO,MAAMI,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAAb;AACD,GARQ,EAQN,CAACL,KAAD,CARM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAA,yCACS;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,cADT;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEE,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArCD;;GAAMH,a;;AAuCN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n//useEffect viene lanciato dopo ogni re-render\n//Lo use Effect ci permette di chiamare una clean up Function\n//l secondo parametro descrive all'aggiornare di quali valori viene eseguito lo useEffect\nconst useEffectBasi = () => {\n  /**\n   * @type {[Number, Funtion]} valore del contatore\n   */\n  const [value, setValue] = useState(1);\n\n  /**\n   * Funzione aumentare il contatore\n   * @return {undefined}\n   */\n  const aumenta = () => {\n    setValue((oldValue) => oldValue + 1);\n  };\n\n  /**\n   * useEffect modifica il titolo della nostra applicazione\n   * in base al numero di contenuto all'interno del nostro state value\n   */\n  useEffect(() => {\n    console.log(\"Eccomi, sono use Effect\");\n    if (value < 1) {\n      document.title = `Nessun Messaggio`;\n    } else {\n      document.title = `Nuovo Messaggi: ${value}`;\n    }\n    return () => console.log(\"clean up function chiamata\");\n  }, [value]);\n  return (\n    <div className=\"item shadow\">\n      <h4>\n        Value: <span>{value}</span>\n      </h4>\n      <button className=\"button\" onClick={aumenta}>\n        Aumenta\n      </button>\n    </div>\n  );\n};\n\nexport default useEffectBasi;\n"]},"metadata":{},"sourceType":"module"}